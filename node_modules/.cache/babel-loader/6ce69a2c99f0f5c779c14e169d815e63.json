{"ast":null,"code":"var _jsxFileName = \"/var/www/html/dummy_applications/3rd_party_login/src/components/paypal/payment.payal.js\";\nimport React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nconst initialOptions = {\n  clientId: \"AXzXikAFC3jt6oOOE6VqajfrUF3wX-gVcd7DA4wan26noU8uG2cVeElNa60kcWR-PJUgIIZ__LG0W3Y7\",\n  currency: \"USD\",\n  intent: \"capture\"\n};\nconst Payment = () => {\n  const token = localStorage.getItem('token');\n  async function createOrder() {\n    console.log('yeaaaaaaaaah');\n    return fetch(`${process.env.REACT_APP_USER_BASE_URL}/create-payment-paypal`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // use the \"body\" param to optionally pass additional order information\n      // like product ids and quantities\n      body: JSON.stringify({\n        cart: [{\n          id: 1,\n          quantity: 2\n        }]\n      })\n    }).then(response => response.json()).then(order => order.id).catch(() => {\n      alert('Error');\n    });\n  }\n  function onApprove(data) {\n    return fetch(`${process.env.REACT_APP_USER_BASE_URL}/capture-paypal-order`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        header\n      },\n      body: JSON.stringify({\n        orderID: data.orderID\n      })\n    }).then(response => response.json()).then(orderData => {\n      const name = orderData.payer.name.given_name;\n      alert(`Transaction completed by ${name}`);\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PayPalScriptProvider, {\n    options: {\n      clientId: \"AXzXikAFC3jt6oOOE6VqajfrUF3wX-gVcd7DA4wan26noU8uG2cVeElNa60kcWR-PJUgIIZ__LG0W3Y7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PayPalButtons, {\n    createOrder: (data, actions) => {\n      return fetch(`${process.env.REACT_APP_USER_BASE_URL}/create-payment-paypal`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          // Send any necessary data for order creation (e.g., item details, user info)\n        })\n      }).then(res => res.json()).then(order => {\n        console.log('Created Order ID:', order);\n        return order.id; // Return the order ID here\n      }).catch(err => {\n        console.error('Error creating order:', err);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n};\nexport default Payment;","map":{"version":3,"names":["React","PayPalScriptProvider","PayPalButtons","initialOptions","clientId","currency","intent","Payment","token","localStorage","getItem","createOrder","console","log","fetch","process","env","REACT_APP_USER_BASE_URL","method","headers","body","JSON","stringify","cart","id","quantity","then","response","json","order","catch","alert","onApprove","data","header","orderID","orderData","name","payer","given_name","createElement","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","options","actions","res","err","error"],"sources":["/var/www/html/dummy_applications/3rd_party_login/src/components/paypal/payment.payal.js"],"sourcesContent":["import React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nconst initialOptions = {\n    clientId: \"AXzXikAFC3jt6oOOE6VqajfrUF3wX-gVcd7DA4wan26noU8uG2cVeElNa60kcWR-PJUgIIZ__LG0W3Y7\",\n    currency: \"USD\",\n    intent: \"capture\",\n};\n\nconst Payment = () =>  {\n    const token =  localStorage.getItem('token');\n    async function createOrder() {\n        console.log('yeaaaaaaaaah');\n        return fetch(`${process.env.REACT_APP_USER_BASE_URL}/create-payment-paypal`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            // use the \"body\" param to optionally pass additional order information\n            // like product ids and quantities\n            body: JSON.stringify({\n                cart: [\n                    {\n                        id: 1,\n                        quantity: 2,\n                    },\n                ],\n            }),\n        })\n            .then((response) => response.json())\n            .then((order) => order.id)\n            .catch(() => {\n                alert('Error');\n            });\n    }\n    function onApprove(data) {\n        return fetch(`${process.env.REACT_APP_USER_BASE_URL}/capture-paypal-order`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            header\n          },\n          body: JSON.stringify({\n            orderID: data.orderID\n          })\n        })\n        .then((response) => response.json())\n        .then((orderData) => {\n              const name = orderData.payer.name.given_name;\n              alert(`Transaction completed by ${name}`);\n        });\n    \n    }\n    \n    return (\n        <div key={1}>\n            <PayPalScriptProvider options={{ clientId: \"AXzXikAFC3jt6oOOE6VqajfrUF3wX-gVcd7DA4wan26noU8uG2cVeElNa60kcWR-PJUgIIZ__LG0W3Y7\" }}>\n                <PayPalButtons createOrder={(data, actions) => {\n                return fetch(`${process.env.REACT_APP_USER_BASE_URL}/create-payment-paypal`, {\n                method: 'POST',     \n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    // Send any necessary data for order creation (e.g., item details, user info)\n                }),\n                })\n                .then(res => res.json())\n                .then(order => {\n                console.log('Created Order ID:', order);\n                return order.id; // Return the order ID here\n                })\n                .catch(err => {\n                console.error('Error creating order:', err);\n                });\n            }}/>\n            </PayPalScriptProvider>\n        </div>\n    );\n}\n\n  export default Payment;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
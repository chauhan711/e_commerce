{"ast":null,"code":"var _jsxFileName = \"/var/www/html/dummy_applications/3rd_party_login/src/components/paypal/payment.payal.js\";\nimport React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nconst initialOptions = {\n  clientId: \"AXzXikAFC3jt6oOOE6VqajfrUF3wX-gVcd7DA4wan26noU8uG2cVeElNa60kcWR-PJUgIIZ__LG0W3Y7\",\n  currency: \"USD\",\n  intent: \"capture\"\n};\nconst Payment = () => {\n  function createOrder() {\n    const token = localStorage.getItem('token');\n    const header = {\n      Authorization: `Bearer ${token}`\n    };\n    return fetch(`${process.env.REACT_APP_USER_BASE_URL}/get-user-products`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        header\n      },\n      // use the \"body\" param to optionally pass additional order information\n      // like product ids and quantities\n      body: JSON.stringify({\n        cart: [{\n          id: \"YOUR_PRODUCT_ID\",\n          quantity: \"YOUR_PRODUCT_QUANTITY\"\n        }]\n      })\n    }).then(response => response.json()).then(order => order.id);\n  }\n  function onApprove(data) {\n    return fetch(\"/my-server/capture-paypal-order\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        orderID: data.orderID\n      })\n    }).then(response => response.json()).then(orderData => {\n      const name = orderData.payer.name.given_name;\n      alert(`Transaction completed by ${name}`);\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PayPalScriptProvider, {\n    options: initialOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PayPalButtons, {\n    createOrder: createOrder,\n    onApprove: onApprove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })));\n};\nexport default Payment;","map":{"version":3,"names":["React","PayPalScriptProvider","PayPalButtons","initialOptions","clientId","currency","intent","Payment","createOrder","token","localStorage","getItem","header","Authorization","fetch","process","env","REACT_APP_USER_BASE_URL","method","headers","body","JSON","stringify","cart","id","quantity","then","response","json","order","onApprove","data","orderID","orderData","name","payer","given_name","alert","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","options"],"sources":["/var/www/html/dummy_applications/3rd_party_login/src/components/paypal/payment.payal.js"],"sourcesContent":["import React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nconst initialOptions = {\n    clientId: \"AXzXikAFC3jt6oOOE6VqajfrUF3wX-gVcd7DA4wan26noU8uG2cVeElNa60kcWR-PJUgIIZ__LG0W3Y7\",\n    currency: \"USD\",\n    intent: \"capture\",\n};\n\nconst Payment = () =>  {\n    function createOrder() {\n        const token =  localStorage.getItem('token');\n        const header = {Authorization:`Bearer ${token}`};\n        return fetch(`${process.env.REACT_APP_USER_BASE_URL}/get-user-products`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                header\n            },\n            // use the \"body\" param to optionally pass additional order information\n            // like product ids and quantities\n            body: JSON.stringify({\n                cart: [\n                    {\n                        id: \"YOUR_PRODUCT_ID\",\n                        quantity: \"YOUR_PRODUCT_QUANTITY\",\n                    },\n                ],\n            }),\n        })\n            .then((response) => response.json())\n            .then((order) => order.id);\n    }\n    function onApprove(data) {\n        return fetch(\"/my-server/capture-paypal-order\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            orderID: data.orderID\n          })\n        })\n        .then((response) => response.json())\n        .then((orderData) => {\n              const name = orderData.payer.name.given_name;\n              alert(`Transaction completed by ${name}`);\n        });\n    \n    }\n\n    return (\n        <div>\n            <PayPalScriptProvider options={initialOptions}>\n                <PayPalButtons createOrder={createOrder} onApprove={onApprove}/>\n            </PayPalScriptProvider>\n        </div>\n    );\n}\n\n  export default Payment;\n  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,aAAa,QAAQ,yBAAyB;AAC7E,MAAMC,cAAc,GAAG;EACnBC,QAAQ,EAAE,kFAAkF;EAC5FC,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAO;EACnB,SAASC,WAAWA,CAAA,EAAG;IACnB,MAAMC,KAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,MAAMC,MAAM,GAAG;MAACC,aAAa,EAAC,UAAUJ,KAAK;IAAE,CAAC;IAChD,OAAOK,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,oBAAoB,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCP;MACJ,CAAC;MACD;MACA;MACAQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,IAAI,EAAE,CACF;UACIC,EAAE,EAAE,iBAAiB;UACrBC,QAAQ,EAAE;QACd,CAAC;MAET,CAAC;IACL,CAAC,CAAC,CACGC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAKA,KAAK,CAACL,EAAE,CAAC;EAClC;EACA,SAASM,SAASA,CAACC,IAAI,EAAE;IACrB,OAAOjB,KAAK,CAAC,iCAAiC,EAAE;MAC9CI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBU,OAAO,EAAED,IAAI,CAACC;MAChB,CAAC;IACH,CAAC,CAAC,CACDN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEO,SAAS,IAAK;MACf,MAAMC,IAAI,GAAGD,SAAS,CAACE,KAAK,CAACD,IAAI,CAACE,UAAU;MAC5CC,KAAK,CAAC,4BAA4BH,IAAI,EAAE,CAAC;IAC/C,CAAC,CAAC;EAEN;EAEA,oBACIlC,KAAA,CAAAsC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI5C,KAAA,CAAAsC,aAAA,CAACrC,oBAAoB;IAAC4C,OAAO,EAAE1C,cAAe;IAAAoC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1C5C,KAAA,CAAAsC,aAAA,CAACpC,aAAa;IAACM,WAAW,EAAEA,WAAY;IAACsB,SAAS,EAAEA,SAAU;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAC7C,CACrB,CAAC;AAEd,CAAC;AAEC,eAAerC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/html/dummy_applications/3rd_party_login/src/components/paypal/payment.payal.js\";\nimport React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nconst initialOptions = {\n  clientId: \"AXzXikAFC3jt6oOOE6VqajfrUF3wX-gVcd7DA4wan26noU8uG2cVeElNa60kcWR-PJUgIIZ__LG0W3Y7\",\n  currency: \"USD\",\n  intent: \"capture\"\n};\nfunction createOrder() {\n  const token = localStorage.getItem('token');\n  const header = {\n    Authorization: `Bearer ${token}`\n  };\n  return fetch(`${process.env.REACT_APP_USER_BASE_URL}/get-user-products`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      header\n    },\n    // use the \"body\" param to optionally pass additional order information\n    // like product ids and quantities\n    body: JSON.stringify({\n      cart: [{\n        id: \"YOUR_PRODUCT_ID\",\n        quantity: \"YOUR_PRODUCT_QUANTITY\"\n      }]\n    })\n  }).then(response => response.json()).then(order => order.id);\n}\nfunction onApprove(data) {\n  return fetch(\"/my-server/capture-paypal-order\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      orderID: data.orderID\n    })\n  }).then(response => response.json()).then(orderData => {\n    const name = orderData.payer.name.given_name;\n    alert(`Transaction completed by ${name}`);\n  });\n}\nconst Payment = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PayPalScriptProvider, {\n    options: initialOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PayPalButtons, {\n    createOrder: createOrder,\n    onApprove: onApprove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })));\n};\nexport default Payment;","map":{"version":3,"names":["React","PayPalScriptProvider","PayPalButtons","initialOptions","clientId","currency","intent","createOrder","token","localStorage","getItem","header","Authorization","fetch","process","env","REACT_APP_USER_BASE_URL","method","headers","body","JSON","stringify","cart","id","quantity","then","response","json","order","onApprove","data","orderID","orderData","name","payer","given_name","alert","Payment","createElement","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","options"],"sources":["/var/www/html/dummy_applications/3rd_party_login/src/components/paypal/payment.payal.js"],"sourcesContent":["import React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nconst initialOptions = {\n    clientId: \"AXzXikAFC3jt6oOOE6VqajfrUF3wX-gVcd7DA4wan26noU8uG2cVeElNa60kcWR-PJUgIIZ__LG0W3Y7\",\n    currency: \"USD\",\n    intent: \"capture\",\n};\nfunction createOrder() {\n    const token =  localStorage.getItem('token');\n    const header = {Authorization:`Bearer ${token}`};\n    return fetch(`${process.env.REACT_APP_USER_BASE_URL}/get-user-products`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            header\n        },\n        // use the \"body\" param to optionally pass additional order information\n        // like product ids and quantities\n        body: JSON.stringify({\n            cart: [\n                {\n                    id: \"YOUR_PRODUCT_ID\",\n                    quantity: \"YOUR_PRODUCT_QUANTITY\",\n                },\n            ],\n        }),\n    })\n        .then((response) => response.json())\n        .then((order) => order.id);\n}\nfunction onApprove(data) {\n    return fetch(\"/my-server/capture-paypal-order\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        orderID: data.orderID\n      })\n    })\n    .then((response) => response.json())\n    .then((orderData) => {\n          const name = orderData.payer.name.given_name;\n          alert(`Transaction completed by ${name}`);\n    });\n\n}\nconst Payment = () =>  {\n    return (\n        <div key={1}>\n            <PayPalScriptProvider options={initialOptions}>\n                <PayPalButtons createOrder={createOrder} onApprove={onApprove}/>\n            </PayPalScriptProvider>\n        </div>\n    );\n}\n\n  export default Payment;\n  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,aAAa,QAAQ,yBAAyB;AAC7E,MAAMC,cAAc,GAAG;EACnBC,QAAQ,EAAE,kFAAkF;EAC5FC,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE;AACZ,CAAC;AACD,SAASC,WAAWA,CAAA,EAAG;EACnB,MAAMC,KAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC5C,MAAMC,MAAM,GAAG;IAACC,aAAa,EAAC,UAAUJ,KAAK;EAAE,CAAC;EAChD,OAAOK,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,oBAAoB,EAAE;IACrEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClCP;IACJ,CAAC;IACD;IACA;IACAQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,IAAI,EAAE,CACF;QACIC,EAAE,EAAE,iBAAiB;QACrBC,QAAQ,EAAE;MACd,CAAC;IAET,CAAC;EACL,CAAC,CAAC,CACGC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAKA,KAAK,CAACL,EAAE,CAAC;AAClC;AACA,SAASM,SAASA,CAACC,IAAI,EAAE;EACrB,OAAOjB,KAAK,CAAC,iCAAiC,EAAE;IAC9CI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBU,OAAO,EAAED,IAAI,CAACC;IAChB,CAAC;EACH,CAAC,CAAC,CACDN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEO,SAAS,IAAK;IACf,MAAMC,IAAI,GAAGD,SAAS,CAACE,KAAK,CAACD,IAAI,CAACE,UAAU;IAC5CC,KAAK,CAAC,4BAA4BH,IAAI,EAAE,CAAC;EAC/C,CAAC,CAAC;AAEN;AACA,MAAMI,OAAO,GAAGA,CAAA,KAAO;EACnB,oBACIrC,KAAA,CAAAsC,aAAA;IAAKC,GAAG,EAAE,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACR7C,KAAA,CAAAsC,aAAA,CAACrC,oBAAoB;IAAC6C,OAAO,EAAE3C,cAAe;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1C7C,KAAA,CAAAsC,aAAA,CAACpC,aAAa;IAACK,WAAW,EAAEA,WAAY;IAACsB,SAAS,EAAEA,SAAU;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAC7C,CACrB,CAAC;AAEd,CAAC;AAEC,eAAeR,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/html/dummy_applications/3rd_party_login/src/components/middlewares/DashboardPermission.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Outlet } from 'react-router-dom';\nimport { Super_Admin, Admin } from '../../helpers/roles.helpers';\nimport { Admin_Dashboard, Saler_Dashboard } from '../../helpers/permissions';\nimport helpers from '../../helpers/helper';\nconst DashboardPermission = ({\n  dashboard\n}) => {\n  const [authUser, setAuthUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    let roles = {};\n    if (dashboard == Admin_Dashboard) {\n      roles = {\n        Super_Admin,\n        Admin\n      };\n    } else if (dashboard == Saler_Dashboard)\n      //verifing role\n      if (helpers.verifyRole(user, roles)) {\n        setAuthUser(true);\n      } else {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        navigate('/login');\n      }\n  }, []);\n  return authUser ? /*#__PURE__*/React.createElement(Outlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }) : null;\n};\nexport default DashboardPermission;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Outlet","Super_Admin","Admin","Admin_Dashboard","Saler_Dashboard","helpers","DashboardPermission","dashboard","authUser","setAuthUser","navigate","user","localStorage","getItem","roles","verifyRole","removeItem","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/var/www/html/dummy_applications/3rd_party_login/src/components/middlewares/DashboardPermission.component.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { useNavigate,Outlet } from 'react-router-dom';\nimport { Super_Admin,Admin } from '../../helpers/roles.helpers';\nimport {Admin_Dashboard,Saler_Dashboard} from '../../helpers/permissions';\nimport helpers from '../../helpers/helper';\n\n  const DashboardPermission = ({dashboard}) =>  {\n    const [authUser,setAuthUser] = useState(null);\n    const navigate = useNavigate();\n    useEffect (()=>{\n        const user = localStorage.getItem('user');\n        let roles = {};\n        if(dashboard == Admin_Dashboard)\n        {\n            roles = {Super_Admin,Admin};\n        }\n        else if(dashboard == Saler_Dashboard)\n\n        //verifing role\n        if(helpers.verifyRole(user,roles))\n        {\n            setAuthUser(true);\n        }\n        else{\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            navigate('/login');\n        }\n    },[]);\n\treturn (\n        authUser ?  <Outlet/> : null\n\t);\n  }\n  \n  export default DashboardPermission;"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,WAAW,EAACC,MAAM,QAAQ,kBAAkB;AACrD,SAASC,WAAW,EAACC,KAAK,QAAQ,6BAA6B;AAC/D,SAAQC,eAAe,EAACC,eAAe,QAAO,2BAA2B;AACzE,OAAOC,OAAO,MAAM,sBAAsB;AAExC,MAAMC,mBAAmB,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAM;EAC5C,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9BD,SAAS,CAAE,MAAI;IACX,MAAMa,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIC,KAAK,GAAG,CAAC,CAAC;IACd,IAAGP,SAAS,IAAIJ,eAAe,EAC/B;MACIW,KAAK,GAAG;QAACb,WAAW;QAACC;MAAK,CAAC;IAC/B,CAAC,MACI,IAAGK,SAAS,IAAIH,eAAe;MAEpC;MACA,IAAGC,OAAO,CAACU,UAAU,CAACJ,IAAI,EAACG,KAAK,CAAC,EACjC;QACIL,WAAW,CAAC,IAAI,CAAC;MACrB,CAAC,MACG;QACAG,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;QAChCJ,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC;QAC/BN,QAAQ,CAAC,QAAQ,CAAC;MACtB;EACJ,CAAC,EAAC,EAAE,CAAC;EACR,OACOF,QAAQ,gBAAIZ,KAAA,CAAAqB,aAAA,CAACjB,MAAM;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,GAAG,IAAI;AAElC,CAAC;AAED,eAAejB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}